from game_state import GameState
from pacman import PacMan
from ghost import Ghost

class GameManager:
    def __init__(self, maze):
        self.pacman = PacMan(1, 1)
        self.ghosts = [Ghost(6, 5), Ghost(8, 5), Ghost(10, 5)]
        self.maze = maze
        self.game_state = GameState()
        self.game_over = False

    def update_game(self):
        """–û–Ω–æ–≤–ª–µ–Ω–Ω—è –≥—Ä–∏ –ø—ñ—Å–ª—è –∫–æ–∂–Ω–æ–≥–æ –∫—Ä–æ–∫—É"""
        if self.game_over:
            return

        for ghost in self.ghosts:
            ghost.move(self.maze)

        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑—ñ—Ç–∫–Ω–µ–Ω–Ω—è Pac-Man –∑ –ø—Ä–∏–≤–∏–¥–∞–º–∏
        if any(g.x == self.pacman.x and g.y == self.pacman.y for g in self.ghosts):
            self.pacman.lives -= 1
            print(f"‚ùå Pac-Man –∑'—ó–¥–µ–Ω–∏–π! –ñ–∏—Ç—Ç—ñ–≤ –∑–∞–ª–∏—à–∏–ª–æ—Å—å: {self.pacman.lives}")
            if self.pacman.lives <= 0:
                self.game_over = True
                print("‚ùå –ì–†–ê –ó–ê–ö–Ü–ù–ß–ï–ù–ê! Pac-Man –ø—Ä–æ–≥—Ä–∞–≤!")
                return

        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–µ—Ä–µ–º–æ–≥–∏
        if self.check_win_condition():
            self.game_over = True
            print("üéâ –í–Ü–¢–ê–Ñ–ú–û! Pac-Man –≤–∏–≥—Ä–∞–≤!")

    def check_win_condition(self):
        """–ü–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –≤—Å—ñ —Ç–æ—á–∫–∏ –∑—ñ–±—Ä–∞–Ω—ñ"""
        for row in self.maze.grid:
            if '.' in row or 'O' in row:
                return False
        return True
