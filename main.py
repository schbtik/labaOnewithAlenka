import pygame
import sys
from game_state import GameState
from maze import Maze
from game_manager import GameManager

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Pygame
pygame.init()

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤—ñ–∫–Ω–∞
WIDTH, HEIGHT = 600, 600
CELL_SIZE = 40
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Pac-Man")
clock = pygame.time.Clock()

# –ö–æ–ª—å–æ—Ä–∏
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
YELLOW = (255, 255, 0)
RED = (255, 0, 0)
BLUE = (0, 0, 255)

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≥—Ä–∏
maze = Maze()
game = GameManager(maze)
game_state = GameState()

#—Ä–∏—Å—É–µ–º —Å—Ç–µ–Ω—ã
def draw_maze():
    for y, row in enumerate(maze.grid):
        for x, cell in enumerate(row):
            if cell == '#':  # –°—Ç—ñ–Ω–∏
                pygame.draw.rect(screen, BLUE, (x * CELL_SIZE, y * CELL_SIZE, CELL_SIZE, CELL_SIZE))
            elif cell == '.':  # –¢–æ—á–∫–∏
                pygame.draw.circle(screen, WHITE, (x * CELL_SIZE + CELL_SIZE // 2, y * CELL_SIZE + CELL_SIZE // 2), 5)
            elif cell == 'O':  # –ï–Ω–µ—Ä–≥–æ–¥–∂–∞–π–∑–µ—Ä–∏
                pygame.draw.circle(screen, WHITE, (x * CELL_SIZE + CELL_SIZE // 2, y * CELL_SIZE + CELL_SIZE // 2), 10)

#—Ä–∏—Å—É–µ–º –ø–∞–∫–º–µ–Ω–∞ —Å–∞–º–æ–≥–æ
# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –º–∞–ª—é–≤–∞–Ω–Ω—è Pac-Man
def draw_pacman():
    pygame.draw.circle(screen, YELLOW,
                       (game.pacman.x * CELL_SIZE + CELL_SIZE // 2, game.pacman.y * CELL_SIZE + CELL_SIZE // 2),
                       CELL_SIZE // 3)


#—Ä–∏—Å—É–µ–º –ø—Ä–∏–≤–∏–¥–µ–Ω–∏–µ
# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –º–∞–ª—é–≤–∞–Ω–Ω—è –ø—Ä–∏–≤–∏–¥—ñ–≤
def draw_ghosts():
    """–ú–∞–ª—é—î –ø—Ä–∏–≤–∏–¥—ñ–≤ —ñ–∑ —ó—Ö –ø–æ—Ç–æ—á–Ω–∏–º –∫–æ–ª—å–æ—Ä–æ–º"""
    for ghost in game.ghosts:
        pygame.draw.rect(screen, ghost.color, (ghost.x * CELL_SIZE, ghost.y * CELL_SIZE, CELL_SIZE, CELL_SIZE))


# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ä–∞—Ö—É–Ω–∫—É —Ç–∞ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∂–∏—Ç—Ç—ñ–≤
def draw_score_and_lives():
    font = pygame.font.Font(None, 36)

    # –†–∞—Ö—É–Ω–æ–∫
    score_text = font.render(f"Score: {game.pacman.score}", True, WHITE)
    screen.blit(score_text, (10, 10))

    # –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∂–∏—Ç—Ç—ñ–≤
    lives_text = font.render(f"Lives: {game.pacman.lives}", True, WHITE)
    screen.blit(lives_text, (10, 50))  # –†–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç—É –¥–ª—è –∂–∏—Ç—Ç—ñ–≤


# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∑—ñ—Ç–∫–Ω–µ–Ω–Ω—è –∑ –ø—Ä–∏–≤–∏–¥–æ–º
def check_collision_with_ghosts():
    for ghost in game.ghosts:
        if game.pacman.x == ghost.x and game.pacman.y == ghost.y:
            if game.pacman.lives > 0:  # –Ø–∫—â–æ —î –∂–∏—Ç—Ç—è –¥–ª—è –∑–º–µ–Ω—à–µ–Ω–Ω—è
                game.pacman.lives -= 1  # –ó–º–µ–Ω—à—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∂–∏—Ç—Ç—ñ–≤
                print(f"‚ùå Pac-Man –∑'—ó–¥–µ–Ω–∏–π! –ñ–∏—Ç—Ç—ñ–≤ –∑–∞–ª–∏—à–∏–ª–æ—Å—å: {game.pacman.lives}")
                game.pacman.reset_position()  # –û–Ω–æ–≤–ª—é—î–º–æ –ø–æ–∑–∏—Ü—ñ—é Pac-Man (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –Ω–∞ —Å—Ç–∞—Ä—Ç–æ–≤—É)
                if game.pacman.lives <= 0:
                    game.game_over = True  # –Ø–∫—â–æ –Ω–µ–º–∞—î –∂–∏—Ç—Ç—ñ–≤, –≥—Ä–∞ –∑–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è


# –û—Å–Ω–æ–≤–Ω–∏–π —Ü–∏–∫–ª –≥—Ä–∏
running = True
while running:
    screen.fill(BLACK)  # –û—á–∏—â–µ–Ω–Ω—è –µ–∫—Ä–∞–Ω—É

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        elif event.type == pygame.KEYDOWN and not game.game_over:
            if event.key == pygame.K_UP:
                game.pacman.move("UP", maze)
            elif event.key == pygame.K_DOWN:
                game.pacman.move("DOWN", maze)
            elif event.key == pygame.K_LEFT:
                game.pacman.move("LEFT", maze)
            elif event.key == pygame.K_RIGHT:
                game.pacman.move("RIGHT", maze)

    check_collision_with_ghosts()  # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∑—ñ—Ç–∫–Ω–µ–Ω–Ω—è –∑ –ø—Ä–∏–≤–∏–¥–∞–º–∏

    game.update_game()  # –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –≥—Ä–∏

    draw_maze()  # –ú–∞–ª—é—î–º–æ –ª–∞–±—ñ—Ä–∏–Ω—Ç
    draw_pacman()  # –ú–∞–ª—é—î–º–æ Pac-Man
    draw_ghosts()
    draw_score_and_lives()  # –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ —Ä–∞—Ö—É–Ω–æ–∫ —Ç–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∂–∏—Ç—Ç—ñ–≤

    pygame.display.flip()  # –û–Ω–æ–≤–ª–µ–Ω–Ω—è

    clock.tick(10)  # –û–±–º–µ–∂–µ–Ω–Ω—è FPS –¥–æ 10

    # –Ø–∫—â–æ –≥—Ä–∞ –∑–∞–∫—ñ–Ω—á–µ–Ω–∞ ‚Äì –∑—É–ø–∏–Ω—è—î–º–æ —Ü–∏–∫–ª
    if game.game_over:
        running = False

# –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è –≥—Ä–∏: –ø–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ —á–µ–∫–∞—î–º–æ –≤–∏—Ö–æ–¥—É
screen.fill(BLACK)
font = pygame.font.Font(None, 50)
if game.pacman.lives > 0:
    text = font.render("üéâ –í–ò –ü–ï–†–ï–ú–û–ì–õ–ò!", True, WHITE)
else:
    text = font.render("‚ùå –í–ò –ü–†–û–ì–†–ê–õ–ò!", True, RED)
screen.blit(text, (WIDTH // 4, HEIGHT // 2))
pygame.display.flip()

# –ß–µ–∫–∞—î–º–æ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–ª–∞–≤—ñ—à—ñ
waiting = True
while waiting:
    for event in pygame.event.get():
        if event.type == pygame.QUIT or event.type == pygame.KEYDOWN:
            waiting = False

pygame.quit()
sys.exit()
